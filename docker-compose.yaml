version: "3.8"

services:
  mysql-db:
    image: mysql:8.2
    hostname: mysql
    volumes:
      - db-data:/var/lib/mysql
      # - ./db/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 3306:3306
    expose:
      - 3306
    restart: always
    environment:
      MYSQL_DATABASE: form76-generator-db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - localnet
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    expose:
      - 2181
    networks:
      - localnet
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 29092:29092
    expose:
      - 9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    networks:
      - localnet
  server:
    depends_on:
      - mysql-db
      - kafka
    container_name: server
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - DB_HOST=mysql:3306
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_DATABASE=form76-generator-db
      - MY_LINK_API_TOKEN=${MY_LINK_API_TOKEN}
      - SPRING_MAIL_HOST=${SPRING_MAIL_HOST}
      - SPRING_MAIL_PORT=${SPRING_MAIL_PORT}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      - GOOGLE_CLOUD_PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID}
      - GOOGLE_CLOUD_BUCKET_NAME=${GOOGLE_CLOUD_BUCKET_NAME}
    ports:
      - "8080:8080"
    networks:
      - localnet
  frontend:
    depends_on:
      - server
    container_name: frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_BACKEND_HOST
    ports:
      - "80:80"
    networks:
      - localnet
volumes:
  db-data: {}
networks:
  localnet:
    driver: bridge

