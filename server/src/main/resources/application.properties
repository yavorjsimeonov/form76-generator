server.port=8080
server.error.include-exception=true
server.error.include-stacktrace=always
#form76-generator.cron.schedule=0 */5 * * * *
form76-generator.cron.schedule=0 0 0 1 * *
form76-generator.output.file.name.prefix=Report_Form76_
form76-generator.emails.enabled=false
mylink.host=http://docker.for.mac.localhost:81
mylink.door.opening.report.uri=/normalOpenDoorlog/extapi/list
mylink.api.token=${MY_LINK_API_TOKEN}

# Datasource configuration for MySQL
spring.datasource.url=jdbc:mysql://mysql:3306/form76-generator-db
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

## Session Management Configuration
#spring.security.filter.chain.content-negotiation.parameter-strategy=ignore
#spring.security.filter.chain.any-request.authorized=permitAll
#spring.security.filter.chain.request-matcher.path.pattern=/api/**
#spring.security.filter.chain.request-matcher.path.authenticated=true
## CSRF Configuration
#spring.security.csrf.disabled=true
## CORS Configuration
#spring.security.cors.configurationSource.allowedOrigins=http://localhost:80
#spring.security.cors.configurationSource.allowedMethods=*
#spring.security.cors.configurationSource.allowedHeaders=*
#spring.security.cors.configurationSource.allowCredentials=true
#spring.security.cors.configurationSource.exposedHeaders=Authorization
#spring.security.cors.configurationSource.maxAge=3600

app.cors.allowed-origins=http://form76generator.com

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.codec.max-in-memory-size=10MB

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=testsendemailjavaspring
spring.mail.password=${SPRING_EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.kafka.consumer.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=kafka.consumer.report.generation.request
spring.kafka.consumer.max-poll-records=3
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.producer.bootstrap-servers=kafka:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

google.cloud.project-id=${GOOGLE_CLOUD_PROJECT_ID}
google.cloud.bucket.name=${GOOGLE_CLOUD_BUCKET_NAME}
