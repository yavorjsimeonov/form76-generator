apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//frontend {
//    nodeVersion = '16.1.0'
//    packageJsonDirectory= file("${projectDir}/frontend")
//    nodeInstallDirectory = file("${projectDir}/frontend/node")
//    //cleanScript = 'run clean'
//    assembleScript = 'run build'
//    //checkScript = 'run check'
//}

//task copyReactApp(type: Copy) {
//    from "${projectDir}/frontend/build"
//    into "${projectDir}/build/resources/main/public/"
//}
//
//copyReactApp.dependsOn(":frontend:build")
//
//['bootJar', 'jar'].each {
//    tasks.named(it) {
//        it.dependsOn(copyReactApp)
//    }
//}

ext {
    set('testcontainers.version', "1.19.8")
}

dependencies {
    api 'org.slf4j:slf4j-api'

    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.data:spring-data-jpa'

    implementation 'org.apache.poi:poi:5.2.4'
    implementation 'org.apache.poi:poi-ooxml:5.2.4'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.slf4j:slf4j-reload4j:2.0.9'

    implementation 'com.mysql:mysql-connector-j'
    implementation 'jakarta.persistence:jakarta.persistence-api'

    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql:1.20.4'

}

configurations {
    all*.exclude group: 'ch.qos.logback'
    all*.exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}

test {
    useJUnitPlatform()
}

jar {

    manifest {
        attributes(
                'Main-Class': 'com.form76.generator.Form76GeneratorApplication',
                "Class-Path": configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
        )
    }
}





